Type,character,meaning,example
Quantifier,`*`,"any number of repetition, including zero or more of some character/expression (metacharacter)","`""*""` matches anything combination of characters"
Quantifier,`+`,1 or more repetitions; 1 or more of some character/expression (metacharacter),"`""[0-9]+""` matches matches many at least digit 1 numbers such as '0', '90', or '021442132'"
Quantifier,`?`,expression is optional; 0/1 of some character/expression (metacharacter),"`""[Gg]ordon( [Vv]\\.)? [Cc]hilde""` matches gordon childe' and 'Gordon V. Childe' (two backslashes are needed to match with a literal period)"
Quantifier,"`{m, n}`","interval quantifier, allows specifying the minimum and maximum number of matches (metacharacter); `{n}` matches exactly n times; `{n,}` matches at least n times; `{n,m}`  matches between n and m times.","`"" [1-2]{1}[0-9]{3} ""` matches years in a sentence, i.e. a space, followed by 1 or 2, followed by three of any of the digits between 0 and 9, followed by a space. It will match ' 1984 ', but not ' 5000 ' or ' 2e '."
Positioner,`^`,start of the line (metacharacter),"`""^text`"" matches lines such as 'text…'"
Positioner,`$`,end of the line (metacharacter),"`""text$""` matches lines such as '...text'"
Positioner,`\b`,"empty string at either edge of a word. Don’t confuse it with `""^ $""` which marks the edge of a string.","`""\\bpost`"" will match 'post-processual' and' post hole', but not 'imposter'"
Positioner,`\B`,empty string provided it is not at an edge of a word,"`""\Bbpost`"" will match 'imposter' but not 'post-processual' and' post hole'"
Operator,`.`,any character (metacharacter),"`""8.11""` matches 8/11, 0811, 9-11, etc"
Operator,`[...]`,set of characters that will be accepted in the match (character class),"`""^[Ii]""` matches both of these lines: 'I dug at...' or i dug at...'"
Operator,`[0-9]`,searches for a a range of characters (character class),"`""[a-zA-Z]""` will match any letter in upper or lower case, `""[0-9]""` will match any digit"
Operator,`[^...]`,"when used at beginning of character class, ""^"" means not (metacharacter)"," `""[^?.]$""` matches any line that does not end in '.' or '?'"
Operator,`|`,"or, used to combine subexpressions called alternatives (metacharacter)","`""^([Nn]eolithic|[Pp]al(ae|e)olithic)""` matches any character strings that start with lower/upper case 'Neolithic…' and 'Palaeolithic…' and 'Paleolithic...' (alternate spelling)."
Operator,`(...)`,"define group as the the text in parentheses, groups will be remembered and can be referred to by \1, \2, etc.","`""([A-Z]\\.)"",  ""\\1""` matches any single capital letter, followed by a single literal period, anywhere in the character string (e.g. a person's middle initial)"
Converter,`\`,convert a normal character into a metacharacter,"`""\\s""` matches any whitespace character (tabs, newlines and spaces); `""\\S""` matches any non-whitespace characters; `""\\d""` matches any digit; `""\\D""` matches any non-digit character; `""\\w""` matches any word character (uppercase letters, lowercase letters, digits and underscore); `""\\W""` matches any non-word characters (note that we need to double-up the backslash in R)"
Converter,`\\`,convert a metacharacter into a normal (literal) character,"`""\\.""` matches with a literal period; `""\\(""` matches with a literal left parenthesis"
